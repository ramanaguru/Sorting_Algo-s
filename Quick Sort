class Solution {
	void quickSort (int[] arr) {
		int n = arr.length;
		qs(arr, 0 , n-1);
	}
	
	public void qs(int arr[],int left , int right){
		if(left < right){
			int partition = makePartition(arr,left, right);
			qs(arr,left , partition-1);
			qs(arr,partition+1, right);
			
		}
	}
	
	public int makePartition(int arr[], int l, int r){
		int pivot = arr[l];
		int i = l;
		int j = r;
		
		while(i <= j){
			i++;
			while(i <= r && arr[i] < pivot){
				i++;
			}
			while(j >= l && arr[j] > pivot){
				j--;
			}
			if(i <= j){
				swap(arr, i, j);
			}
		}
		
		
			swap(arr,l, j);
		
		return j;
		
		
	}
	
	void swap(int arr[], int i , int j){
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
		
	}
}

