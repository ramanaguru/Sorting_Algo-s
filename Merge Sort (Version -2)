//Merge Two Subarrays

Input
Array: [1, 3, 5, 7, 9, 11, 0, 4, 6, 8]
End Index: 5                 // this will look like [1, 3, 5, 7, 9] [11, 0, 4, 6, 8]

Output
Array after merging: [0, 1, 3, 4, 5, 6, 7, 8, 9, 11]

class Solution {
    void merge(int[] arr, int endIndex) {
        int first_part = 0;
        int second_part = endIndex + 1;

        int n = arr.length;
        int ans[] = new int[n];

        int index = 0;

        while (first_part <= endIndex && second_part < n) {
            if (arr[first_part] <= arr[second_part]) {
                ans[index] = arr[first_part];
                index++;
                first_part++;
            } else {
                ans[index] = arr[second_part];
                index++;
                second_part++;
            }
        }

        while (first_part <= endIndex) {
            ans[index] = arr[first_part];
            index++;
            first_part++;
        }

        while (second_part < n) {
            ans[index] = arr[second_part];
            index++;
            second_part++;
        }

        // Copy the merged result back to the original array
        for (int i = 0; i < n; i++) {
            arr[i] = ans[i];
        }
    }
}
